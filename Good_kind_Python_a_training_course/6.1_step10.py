'''Подвиг 9. Пользователь вводит в цикле целые положительные числа, пока не введет число 0. 
Для каждого числа вычисляется квадратный корень (с точностью до сотых) и значение выводится на экран (в столбик). 
С помощью словаря выполните кэширование данных так, чтобы при повторном вводе того же самого числа результат не вычислялся, 
а бралось ранее вычисленное значение из словаря. 
При этом на экране должно выводиться: значение из кэша: <число>

Sample Input:
1
2
3
3
2
4
0
Sample Output:
1.0
1.41
1.73
значение из кэша: 1.73
значение из кэша: 1.41
2.0'''

# V.1
sqrt_d = {}
while (n := input()) != '0':
    if n in sqrt_d:
        print(sqrt_d[n])
        continue
    sqrt = round(int(n) ** 0.5, 2)
    print(sqrt)
    sqrt_d[n] = 'значение из кэша: ' + str(sqrt)

# V.2
sqrt_d = {}
while (n := input()) != '0':
    if n in sqrt_d:
        print(f'значение из кэша: {sqrt_d[n]}')
    else:
        sqrt = round(int(n) ** 0.5, 2)
        print(sqrt)
        sqrt_d[n] = sqrt
